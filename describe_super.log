----------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/bubbles/Desktop/Retirement_Income/dofile/describe_super.log
  log type:  text
 opened on:   3 Jul 2023, 18:01:18

. 
. global folder_path "/Users/bubbles/Desktop/Hilda" 

. 
. global data_output "$folder_path/output"

. 
. use "$data_output/combined", clear 

. 
. compress
  variable wave was float now byte
  (1,299,345 bytes saved)

. 
. xtset id wave 

Panel variable: id (unbalanced)
 Time variable: wave, 1 to 21, but with gaps
         Delta: 1 unit

. 
. //infile the result of build_combine, output a data file with key constructed variables. 
. //this do file generate some key variables///
. 
. /////////////////////////////////////////////////////////////////////////////////////////////
> //Generate variable retired for changing from labor force to retired in that period/ 
. ////////////////////////////////////////////////////////////////////////////////////////////
> 
. //variables used rtcomp rtcompn rtstat lertr
. //should try with rtcage (At what age did you completely retire) to see how many matches. 
. //retirement means completely retired. 
. //currently uses retirement status questions first and then replace with self reported retirement change if missing, because the
>  status questions are in more salient retirement sections and the life event questions are mixed with other types of questions a
> nd are in SCQs, can try the other way around too. 
. 
. gen lfp =(esbrd==1 | esbrd==2) //labor force participation 

. 
. //recode rtcomp rtcompn rtstat .a(not asked) to 0, all to 1/0, 1 being completely retired
. 
. 
. mvencode rtcomp rtcompn rtstat, mv(.a = 0) //people who are still working are not asked. 
      rtcomp: 203917 missing values recoded
     rtcompn: 250740 missing values recoded
      rtstat: 42503 missing values recoded

. recode rtcomp rtcompn (2 = 0) (3 = 0) //never in labor force is coded as not retired
(9,093 changes made to rtcomp)
(252 changes made to rtcompn)

. recode rtstat (2 = 0) (3 = 0) (4 = 0) //partially retired is considered not retired. 
(20,888 changes made to rtstat)

. 
. //
. gen retirement_status = rtcomp 
(167,666 missing values generated)

. replace retirement_status = rtcompn if missing(retirement_status)
(29,114 real changes made, 16,134 to missing)

. replace retirement_status = rtstat if missing(retirement_status)
(131,856 real changes made, 88,751 to missing)

. 
. sort id 

. by id: gen retired_change = retirement_status -  retirement_status[_n-1]   
(147,134 missing values generated)

. gen retired = retired_change if retired_change ==0 | retired_change ==1 //this is whether went from non-retired to retired in th
> at period, ignoring re-entered workforce for now. 
(152,078 missing values generated)

. 
. //if still missing, use lertr 
. recode lertr (1 = 0) (2 = 1) //make retired 1 and not retired 0 
(273,807 changes made to lertr)

. replace retired = lertr if missing(retired)
(132,164 real changes made, 109,944 to missing)

. 
. 
. //superannuation 
. 
. 
. //generate superannuation preservation age using birth year and current age. 
. 
. by id: gen p_age = 55 if hgyob <= 1959
(309,942 missing values generated)

. by id: replace p_age = 55 if  hgyob == 1960 & hgage[1] == 41 
(2,050 real changes made)

. by id: replace p_age = 56 if  hgyob == 1960 & hgage[1] == 40
(2,312 real changes made)

. by id: replace p_age = 56 if  hgyob == 1961 & hgage[1] == 40
(2,557 real changes made)

. by id: replace p_age = 57 if  hgyob == 1961 & hgage[1] == 39
(2,602 real changes made)

. by id: replace p_age = 57 if  hgyob == 1962 & hgage[1] == 39
(2,854 real changes made)

. by id: replace p_age = 58 if  hgyob == 1962 & hgage[1] == 38
(2,343 real changes made)

. by id: replace p_age = 58 if  hgyob == 1963 & hgage[1] == 38
(2,536 real changes made)

. by id: replace p_age = 59 if  hgyob == 1963 & hgage[1] == 37
(2,362 real changes made)

. by id: replace p_age = 59 if  hgyob == 1964 & hgage[1] == 37
(2,777 real changes made)

. by id: replace p_age = 60 if  hgyob == 1964 & hgage[1] == 36
(2,353 real changes made)

. by id: replace p_age = 60 if  hgyob >= 1965 
(278,913 real changes made)

. 
. //generate indicator for reaching condition of release 
. 
. 
. /*
> //gen job change indicator 
> 
> gen changed_cpq =1 if pjsemp ==2  //this is only asked of last period employed people 
> replace changed_cpq =0 if pjsemp ==1
> replace changed_cpq =1 if pjmsemp ==2 
> replace changed_cpq =0 if pjmsemp ==1 //result is 60% missing overall and 14 percent missing for employed people 
> 
> gen changed_scq =1 if lejob ==2
> replace changed_scq =0 if lejob ==1
> 
> gen j_changed =1 if changed_scq==1 | changed_cpq ==1
> replace j_changed =0 if missing(j_changed) & !missing(changed_cpq) & !missing(changed_scq) //try to keep the rest as missing, th
> is doesn't to result in too many changes 
> 
> gen reached_page = (hgage >= p_age & !missing(hgage))
> gen sixty_plus = (hgage >= 60 & !missing(hgage))
> 
> gen cond_release =1 if reached_page==1 & retirement_status==1
> replace cond_release =1 if sixty_plus ==1 & j_changed==1
> replace cond_release=1 if hgage>= 65
> sort id wave 
> by id: replace cond_release=1 if cond_release[_n-1] ==1
> replace cond_release =0 if missing(cond_release)
> by id: gen cond_changed =1 if cond_release - cond_release[_n-1] ==1
> replace cond_changed =0 if missing(cond_changed)
> 
> */ 
. 
. 
. 
. 
. 
. ///////superannuation amount/////
> 
. //need to check how reasonable the interpolations are in a more rigorous way later
. //should check the topcode thing, HILDA provides the actual top code cutoff
. //the current problem with the interpolations is they intepolate outside their section (retired vs not retired)
. //need to figure out why 6000 observations have non missing value for both super_int and super_intr
. //1.45% missing, probably related to top-up sample need to check 
. //think about doing within group (retirement, in labor force) extapolation as well
. 
. 
. 
. //////generate yearly estimates for the value of superannuation/////////
> 
. 
. //for those who are not completely retired 
. 
. //modify the brackets saval savaln savaln2 
. 
. recode saval (1 = 2500) (2 = 12500)  (3 = 35000)  (4 = 75000)  (5 = 150000)  (6 = 350000)  (7 = 500000) (10 = 0) //replace brack
> et by bracket midvalue or value in the case of max bracket
(9,192 changes made to saval)

. 
. recode savaln (1 = 2500) (2 = 12500)  (3 = 35000)  (4 = 75000)  (5 = 150000)  (6 = 350000)  (7 = 750000) (8 = 1000000) (10 = 0) 
> //replace bracket by bracket midvalue or value in the case of max bracket
(9,065 changes made to savaln)

. 
. recode savaln2 (1 = 2500) (2 = 12500)  (3 = 35000)  (4 = 75000)  (5 = 150000)  (6 = 350000)  (7 = 750000) (8 = 1500000) (9 = 350
> 0000) (10 = 5000000) (97 = 0) //replace bracket by bracket midvalue or value in the case of max bracket
(34,606 changes made to savaln2)

. 
. 
. gen super_bracket = saval
(423,923 missing values generated)

. replace super_bracket = savaln if missing(super_bracket)
(26,556 real changes made, 17,491 to missing)

. replace super_bracket = savaln2 if missing(super_bracket)
(72,624 real changes made, 38,018 to missing)

. 
. gen super_value =saest //estimation of actual value 
(394,144 missing values generated)

. replace super_value = super_bracket if missing(super_value) & !missing(super_bracket)
(13,892 real changes made)

. 
. by id: ipolate super_value wave, generate(super_estimate) //generate int super_estimate, do not extrapolate because people will 
> retire and super will then decline
(281026 missing values generated)

. //replace super_estimate = 0 if super_estimate <0 //no negative values for super //no need no extrapolate 
. 
. egen max_1 = max(saest)  

. replace super_estimate = max_1 if super_estimate > max_1 & super_estimate != . //can't exceed the max of reported value
(46 real changes made)

. drop max_1

. replace super_estimate=0 if hgage <15 //children below legal working age has no super
(91,593 real changes made)

. 
. ///those who are completely retired
> 
. recode sacfndr (1 = 2500) (2 = 12500)  (3 = 35000)  (4 = 75000)  (5 = 150000)  (6 = 350000)  (7 = 750000) (8 = 1000000) (10 = 0)
>  //replace bracket by bracket midvalue or value in the case of max bracket
(711 changes made to sacfndr)

. 
. recode sacfnd2 (1 = 2500) (2 = 12500)  (3 = 35000)  (4 = 75000)  (5 = 150000)  (6 = 350000)  (7 = 750000) (8 = 1500000) (9 = 350
> 0000) (10 = 5000000) (97 = 0) //replace bracket by bracket 
(3,247 changes made to sacfnd2)

. 
. gen super_bracketr = sacfnd2 //this is combination of super, allocated pension and annuity assets
(429,868 missing values generated)

. replace super_bracketr = sacfndr if missing(super_bracketr)
(78,442 real changes made, 77,731 to missing)

. 
. 
. gen super_valuer = sacfnda
(428,877 missing values generated)

. replace super_valuer = super_bracketr if missing(super_valuer) & !missing(super_bracketr) 
(257 real changes made)

. 
. by id: ipolate super_valuer wave, generate(super_estimater) //generate int super_estimate
(421761 missing values generated)

. egen max_2 = max(sacfnda) 

. replace super_estimater = max_2 if super_estimater > max_2 & super_estimater != . //can't exceed the max of reported value
(13 real changes made)

. drop max_2

. 
. 
. //overall superannuation estimate that combines retired and not retired groups
. 
. //need to figure out why 6000 observations have non missing value for both super_int and super_intr
. 
. gen super_c = super_estimate if retirement_status == 0
(283,091 missing values generated)

. replace super_c = super_estimater if retirement_status == 1
(10,456 real changes made)

. 
. replace super_c = super_estimate if missing(super_estimater) & !missing(super_estimate)
(93,499 real changes made)

. replace super_c = super_estimater if !missing(super_estimater) & missing(super_estimate)
(749 real changes made)

. 
. //final interpolation (should check again to see if int for transitions from employed to retired make sense), shouldn't extrapol
> ate yet
. 
. by id: ipolate super_c wave, generate(super_final) //generate int super_estimate, do not extrapolate because people will retire 
> and super will then decline
(167249 missing values generated)

. 
. 
. gen super_at_retirement= super_final if retired ==1
(430,232 missing values generated)

. 
. bysort id: egen super=max(super_at_retirement)
(393,620 missing values generated)

. xtile super_quart = super, nq(4)

. 
. 
. //come up with some permanent superannuation component or something that would allow more super annuation information to be used
> . 
. 
. 
. //construct housing variables 
. 
. 
. gen move_address = mhli
(145,461 missing values generated)

. 
. recode move_address  (2=0)
(242,024 changes made to move_address)

. 
. 
. //generate upgrade/downgrade indicators//
. 
. gen own = hstenr
(26,357 missing values generated)

. recode own (2=0) (3=0) (4=0)
(127,587 changes made to own)

. 
. by id: gen upgrade_financial = (hstenr[_n-1] == 1 & hstenr ==1 & mhli==1 &  hsvalui > hsvalui[_n-1])

. 
. by id: gen downgrade_financial = (hstenr[_n-1] == 1 & hstenr ==1 & mhli==1 &  hsvalui < hsvalui[_n-1])

. 
. by id: gen upgrade_physical = (hstenr[_n-1] == 1 & hstenr ==1 & mhli==1 &  hsbedrm > hsbedrm[_n-1] )

. 
. by id: gen downgrade_physical = (hstenr[_n-1] == 1 & hstenr ==1 & mhli==1 &  hsbedrm < hsbedrm[_n-1])

. 
. by id: gen rent_to_own =((hstenr[_n-1] == 2 |  hstenr[_n-1] == 4) & hstenr ==1)

. 
. by id: gen own_to_rent = (hstenr[_n-1] == 1 & (hstenr == 2 |  hstenr == 4))

. 
. 
. //constructing age pension variable 
. 
. gen pension_age=1 if bnage==1 | bnage==2 | bnage1==1
(374,339 missing values generated)

. replace pension_age==0 if missing(pension_age)
== invalid name
r(198);

end of do-file

r(198);

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. replace pension_age=0 if missing(pension_age)
(374,339 real changes made)

. 
end of do-file

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. bysort id: gen pension_changed =1 if pension_age - pension_age[_n-1] ==1 
(429,565 missing values generated)

. 
end of do-file

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. replace pension_changed =0 if missing(pension_changed)
(429,565 real changes made)

. 
end of do-file

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. bysort id: egen pwave = max(cond(pension_changed==1, wave, .)) //the wave at which 
(372,192 missing values generated)

. 
end of do-file

. br id wave hgage bnage bnage1 pension_age pwave 

. br id wave hgage bnage bnage1 pension_age pwave  bncap

. drop pension_age 

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. gen pension_age=1 if bnage==1 | bnage==2 | bnage1==1
(374,339 missing values generated)

. bysort id: replace pension_age==1 if pension_age[_n-1] ==1
== invalid name
r(198);

end of do-file

r(198);

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. bysort id: replace pension_age=1 if pension_age[_n-1] ==1
(1,175 real changes made)

. 
end of do-file

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. replace pension_age=0 if missing(pension_age)
(373,164 real changes made)

. 
end of do-file

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. bysort id: gen pension_changed =1 if pension_age - pension_age[_n-1] ==1 
variable pension_changed already defined
r(110);

end of do-file

r(110);

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. replace pension_changed =0 if missing(pension_changed)
(0 real changes made)

. 
end of do-file

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. bysort id: egen pwave = max(cond(pension_changed==1, wave, .)) //the wave at which 
variable pwave already defined
r(110);

end of do-file

r(110);

. drop pwave 

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. bysort id: egen pwave = max(cond(pension_changed==1, wave, .)) //the wave at which reached pension age 
(372,192 missing values generated)

. 
end of do-file

. br id wave hgage bnage bnage1 pension_age pwave bncap

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. bysort id: egen pwave1 = pwave +1  //the wave after to improve accuracy 
unknown egen function pwave()
r(133);

end of do-file

r(133);

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. bysort id: gen pwave1 = pwave +1  //the wave after to improve accuracy 
(372,192 missing values generated)

. 
end of do-file

. br id wave hgage bnage bnage1 pension_age pwave  pwave1

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. gen p1 ==1 if wave ==pwave & bncap==1 
== invalid name
r(198);

end of do-file

r(198);

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. gen p1 =1 if wave ==pwave & bncap==1 
(432,079 missing values generated)

. 
end of do-file

. br id wave pwave bncap 

. br id wave pwave bncap p1

. br bncap

. br id wave pwave bncap p1

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. replace p1 =1 if  bncap==1 & wave == pwave1
(1,475 real changes made)

. 
end of do-file

. help inrange

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. gen flag =1 if inrange(wave,pwave,pwave+5)
(44,664 missing values generated)

. 
end of do-file

. br id wave pwave flag

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. gen flag2=1 if wave <= pwave+5 & pwave>=pwave 
(10,401 missing values generated)

. 
end of do-file

. br id wave pwave flag flag2

. drop flag2

. gen flag2=1 if wave <= pwave+5 & pwave>=pwave 
(10,401 missing values generated)

. drop flag2

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. gen flag2=1 if wave <= pwave+5 & wave>=pwave 
(416,856 missing values generated)

. 
end of do-file

. br id wave pwave flag flag2

. do "/var/folders/qm/3srmvfy90vv8qv2rzzs5zkq40000gn/T//SD01577.000000"

. gen flag5=1 if wave <= pwave+5 & wave>=pwave 
(416,856 missing values generated)

. 
end of do-file

